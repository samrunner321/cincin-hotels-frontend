version: '3'
services:
  database:
    container_name: cincinhotels_db_prod
    image: postgres:14-alpine
    volumes:
      - ./data/database:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - directus
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    container_name: cincinhotels_cache_prod
    image: redis:6-alpine
    networks:
      - directus
    restart: always
    volumes:
      - ./data/cache:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  directus:
    container_name: cincinhotels_directus_prod
    image: directus/directus:latest
    depends_on:
      - database
      - cache
    networks:
      - directus
    restart: always
    volumes:
      - ./uploads:/directus/uploads
      - ./extensions:/directus/extensions
    environment:
      KEY: ${KEY}
      SECRET: ${SECRET}
      DB_CLIENT: 'pg'
      DB_HOST: 'database'
      DB_PORT: '5432'
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      CACHE_ENABLED: 'true'
      CACHE_STORE: 'redis'
      CACHE_REDIS: 'redis://cache:6379'
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      CORS_ENABLED: 'true'
      CORS_ORIGIN: ${CORS_ORIGIN}
      PUBLIC_URL: ${PUBLIC_URL}
      RATE_LIMITER_ENABLED: 'true'
      RATE_LIMITER_STORE: 'redis'
      RATE_LIMITER_REDIS: 'redis://cache:6379'
      RATE_LIMITER_POINTS: 50
      RATE_LIMITER_DURATION: 1
      CONTENT_SECURITY_POLICY_DIRECTIVES__IMG_SRC: ${PUBLIC_URL} 'self' *.unsplash.com data:
      STORAGE_LOCATIONS: 'local'
      STORAGE_LOCAL_PUBLIC_URL: ${PUBLIC_URL}/uploads
      EMAIL_TRANSPORT: 'smtp'
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_SMTP_SECURE: ${EMAIL_SMTP_SECURE}
      TELEMETRY: false
      # These options improve security in production
      ASSETS_TRANSFORM_MAX_CONCURRENT: 5
      ASSETS_TRANSFORM_IMAGE_MAX_DIMENSION: 6000

  # NGINX reverse proxy with SSL termination
  nginx:
    container_name: cincinhotels_nginx
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - directus
    networks:
      - directus
    restart: always

  # Automated backups
  backup:
    container_name: cincinhotels_backup
    image: postgres:14-alpine
    volumes:
      - ./backups:/backups
    networks:
      - directus
    restart: always
    depends_on:
      - database
    environment:
      PGHOST: database
      PGUSER: ${DB_USER}
      PGPASSWORD: ${DB_PASSWORD}
      PGDATABASE: ${DB_DATABASE}
    command: >
      /bin/sh -c '
        mkdir -p /backups &&
        while true; do
          BACKUP_FILE="/backups/cincinhotels_$$(date +\%Y\%m\%d_\%H\%M).sql" &&
          echo "Creating backup: $$BACKUP_FILE" &&
          pg_dump -Fc > $$BACKUP_FILE &&
          find /backups -name "cincinhotels_*.sql" -type f -mtime +7 -delete &&
          sleep 86400;
        done
      '

networks:
  directus:
    name: directus_network_prod